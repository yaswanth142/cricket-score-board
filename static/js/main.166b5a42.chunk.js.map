{"version":3,"sources":["components/ui/Theme.js","components/NotFound.js","constants/BattingStatus.js","constants/OutType.js","util/MathUtil.js","components/ui/RadioGroupBoxStyle.js","components/ScoreBoard.js","components/HorizontalStepper.js","components/StepperContainer.js","main/Main.js","main/Container.js","App.js","index.js"],"names":["theme","createTheme","require","palette","common","typography","NotFound","BATTING","BOLD","CATCH","STUMP","HIT_WICKET","RUN_OUT","MathUtil","Math","floor","random","radioGroupBoxstyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","ScoreBoard","useState","inningNo","setInningNo","inning1","batters","bowlers","inning2","match","setMatch","currentRunStack","setCurrentRunStack","totalRuns","setTotalRuns","total","wide","noBall","extras","setExtras","runsByOver","setRunsByOver","wicketCount","setWicketCount","totalOvers","setTotalOvers","setBatters","ballCount","setBallCount","overCount","setOverCount","recentOvers","setRecentOvers","batter1","setBatter1","batter2","setBatter2","battingOrder","setBattingOrder","isBatter1Edited","setBatter1Edited","isBatter2Edited","setBatter2Edited","isBowlerEdited","setBowlerEdited","bowler","setBowler","setBowlers","inputBowler","setInputBowler","React","isModalOpen","setModalOpen","outType","setOutType","runOutPlayerId","setRunOutPlayerId","remainingBalls","setRemainingBalls","remainingRuns","setRemainingRuns","strikeValue","setStrikeValue","isNoBall","setNoBall","suggestions","setSuggestions","hasNameSuggested","setNameSuggested","hasMatchEnded","setMatchEnded","data","JSON","parse","localStorage","getItem","batting","team1","team2","maxOver","parseInt","history","useHistory","useEffect","document","getElementById","disabled","inputProps","value","onChange","e","newValue","onBlur","name","target","charAt","toUpperCase","slice","state","randomNo","getRandomNo","id","overCompleted","runsByOverParam","currentRunStackParam","bowlerNameElement","querySelector","disableAllScoreButtons","overNo","runs","stack","index","findIndex","blr","isMaidenOver","countWicket","countNoBall","countWide","deliveries","delivery","toString","includes","existingBowler","over","maiden","run","wicket","economy","round","newBatter1","batter1NameElement","ball","four","six","strikeRate","onStrike","battingStatus","newBatter2","batter2NameElement","undoWicket","isNoBallParam","batter","length","undefined","changeStrikeRadio","pop","undoRun","updatedRun","updatedBall","updatedSr","sr","isNaN","switchBatterStrike","handleStrikeChange","strikeParam","handleRun","removeNoBallEffect","arr","push","addNoBallEffect","scoreTypesButtons","querySelectorAll","i","classList","add","remove","handleWicket","isRunOut","playerId","endMatch","endInningButton","textContent","enableAllScoreButtons","rrr","toFixed","isFinite","crr","scoringTeam","chessingTeam","winningMessage","welcomeContent","firstInningCompletedContent","remainingRunsContent","className","onClick","currentDisplayOver","bowlerTotalOver","totalFours","map","reduce","prev","next","totalSixes","wickets","runRate","overs","extra","Modal","open","onClose","Box","sx","FormControl","component","RadioGroup","row","outTypeValue","alignItems","FormControlLabel","control","Radio","color","pink","label","defaultValue","size","checked","style","padding","type","IconButton","onSuggestionsFetchRequested","param","inputValue","trim","toLowerCase","suggestionArr","filter","bowlerObj","onSuggestionsClearRequested","getSuggestionValue","suggestion","renderSuggestion","last","lastChar","substr","rowSpan","recentOver","useStyles","makeStyles","mainContainer","margin","borderRadius","formContainer","display","flexDirection","formGroup","marginBottom","resetContainer","justifyContent","backButton","marginRight","spacing","instructions","marginTop","textField","textfieldWidth","teamNameHeading","fontWeight","center","textAlign","HorizontalStepper","classes","activeStep","setActiveStep","isSubmitting","setSubmitting","steps","handleBack","prevActiveStep","currentValidationSchema","Yup","shape","required","isLastStep","Stepper","orientation","Step","StepLabel","enableReinitialize","validationSchema","initialValues","onSubmit","values","actions","setTouched","stringify","setItem","prp","touched","errors","handleChange","handleBlur","handleSubmit","setFieldValue","TextField","helperText","error","Typography","FormLabel","event","currentTarget","Button","variant","StepperContainer","AppBar","Toolbar","Main","exact","path","Container","App","ThemeProvider","ReactDOM","render"],"mappings":"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","file":"static/js/main.166b5a42.chunk.js","sourcesContent":["const { createTheme } = require('@material-ui/core')\n\nexport const theme = createTheme({\n  palette: {\n    common: {},\n  },\n  typography: {},\n})\n","import React from 'react'\n\nconst NotFound = () => {\n  return <h2>NotFound</h2>\n}\n\nexport default NotFound\n","export const BATTING = 'Batting'\nexport const YET_TO_BAT = 'Yet to Bat'\nexport const OUT = 'Out'\n","export const BOLD = 'Bould'\nexport const CATCH = 'Catch'\nexport const STUMP = 'Stump'\nexport const HIT_WICKET = 'Hit Wicket'\nexport const RUN_OUT = 'Run Out'\n","class MathUtil {\n  static getRandomNo() {\n    const min = 100\n    const max = 999\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n}\n\nexport default MathUtil\n","export const radioGroupBoxstyle = {\n  position: 'absolute',\n  top: '61%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 340,\n  bgcolor: 'background.paper',\n  border: '2px solid #3f51b5',\n  boxShadow: 24,\n  p: '4px',\n}\n","import DeleteIcon from '@mui/icons-material/Delete'\nimport EditIcon from '@mui/icons-material/Edit'\nimport { IconButton } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport { pink } from '@mui/material/colors'\nimport FormControl from '@mui/material/FormControl'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Modal from '@mui/material/Modal'\nimport Radio from '@mui/material/Radio'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Autosuggest from 'react-autosuggest'\nimport { BATTING, OUT } from '../constants/BattingStatus'\nimport { BOLD, CATCH, HIT_WICKET, RUN_OUT, STUMP } from '../constants/OutType'\nimport MathUtil from '../util/MathUtil'\nimport './ScoreBoard.css'\nimport { radioGroupBoxstyle } from './ui/RadioGroupBoxStyle'\n\nconst ScoreBoard = () => {\n  const [inningNo, setInningNo] = useState(1)\n  const [match, setMatch] = useState({ inning1: { batters: [], bowlers: [] }, inning2: { batters: [], bowlers: [] } })\n  const [currentRunStack, setCurrentRunStack] = useState([])\n  const [totalRuns, setTotalRuns] = useState(0)\n  const [extras, setExtras] = useState({ total: 0, wide: 0, noBall: 0 })\n  const [runsByOver, setRunsByOver] = useState(0)\n  const [wicketCount, setWicketCount] = useState(0)\n  const [totalOvers, setTotalOvers] = useState(0)\n  const [batters, setBatters] = useState([])\n  const [ballCount, setBallCount] = useState(0)\n  const [overCount, setOverCount] = useState(0)\n  const [recentOvers, setRecentOvers] = useState([])\n  const [batter1, setBatter1] = useState({})\n  const [batter2, setBatter2] = useState({})\n  const [battingOrder, setBattingOrder] = useState(0)\n  const [isBatter1Edited, setBatter1Edited] = useState(false)\n  const [isBatter2Edited, setBatter2Edited] = useState(false)\n  const [isBowlerEdited, setBowlerEdited] = useState(false)\n  const [bowler, setBowler] = useState({})\n  const [bowlers, setBowlers] = useState([])\n  const [inputBowler, setInputBowler] = useState('')\n  const [isModalOpen, setModalOpen] = React.useState(false)\n  const [outType, setOutType] = React.useState('')\n  const [runOutPlayerId, setRunOutPlayerId] = React.useState('')\n  const [remainingBalls, setRemainingBalls] = useState(0)\n  const [remainingRuns, setRemainingRuns] = useState(0)\n  const [strikeValue, setStrikeValue] = React.useState('strike')\n  const [isNoBall, setNoBall] = useState(false)\n  const [suggestions, setSuggestions] = useState([])\n  const [hasNameSuggested, setNameSuggested] = useState(false)\n  const [hasMatchEnded, setMatchEnded] = useState(false)\n\n  let data = JSON.parse(localStorage.getItem('data'))\n  const { batting, team1, team2 } = data\n  const maxOver = parseInt(data.maxOver)\n  const history = useHistory()\n\n  useEffect(() => {\n    const endInningButton = document.getElementById('end-inning')\n    endInningButton.disabled = true\n  }, [])\n\n  const handleEndInning = (e) => {\n    const endInningButton = document.getElementById('end-inning')\n    if (endInningButton.textContent === 'Reset') {\n      history.push('/')\n    } else {\n      if (batter1.id !== undefined) {\n        const { id, name, run, ball, four, six, strikeRate, onStrike } = batter1\n        batters.push({\n          id,\n          name,\n          run,\n          ball,\n          four,\n          six,\n          strikeRate,\n          onStrike,\n          battingOrder: batter1.battingOrder,\n          battingStatus: BATTING,\n        })\n      }\n      if (batter2.id !== undefined) {\n        batters.push({\n          id: batter2.id,\n          name: batter2.name,\n          run: batter2.run,\n          ball: batter2.ball,\n          four: batter2.four,\n          six: batter2.six,\n          strikeRate: batter2.strikeRate,\n          onStrike: batter2.onStrike,\n          battingOrder: batter2.battingOrder,\n          battingStatus: BATTING,\n        })\n      }\n      if (bowler.id !== undefined) {\n        const currentDisplayOver = Math.round((ballCount === 6 ? 1 : ballCount * 0.1) * 10) / 10\n        let isMaidenOver = true\n        let countWicket = 0\n        let countNoBall = 0\n        let countWide = 0\n        const deliveries = ['1', '2', '3', '4', '6', 'wd']\n        for (let delivery of currentRunStack) {\n          delivery = delivery.toString()\n          if (deliveries.includes(delivery) || delivery.includes('nb')) {\n            isMaidenOver = false\n          }\n          if (delivery === 'W') {\n            countWicket++\n          }\n          if (delivery.includes('nb')) {\n            countNoBall++\n          }\n          if (delivery.includes('wd')) {\n            countWide++\n          }\n        }\n        if (ballCount !== 6) {\n          isMaidenOver = false\n        }\n        const index = bowlers.findIndex((blr) => {\n          return blr.id === bowler.id\n        })\n        if (index !== -1) {\n          const existingBowler = bowlers[index]\n          const { maiden, wicket, noBall, wide, over } = existingBowler\n          const bowlerTotalOver = over + ballCount / 6\n          existingBowler.over = existingBowler.over + currentDisplayOver\n          existingBowler.maiden = isMaidenOver ? maiden + 1 : maiden\n          existingBowler.run = existingBowler.run + runsByOver\n          existingBowler.wicket = wicket + countWicket\n          existingBowler.noBall = noBall + countNoBall\n          existingBowler.wide = wide + countWide\n          existingBowler.economy = Math.round((existingBowler.run / bowlerTotalOver) * 100) / 100\n          bowlers[index] = existingBowler\n          setBowlers(bowlers)\n        } else {\n          if (ballCount !== 6) {\n            bowlers.push({\n              id: bowler.id,\n              name: bowler.name,\n              over: currentDisplayOver,\n              maiden: isMaidenOver ? 1 : 0,\n              run: runsByOver,\n              wicket: countWicket,\n              noBall: countNoBall,\n              wide: countWide,\n              economy: Math.round((runsByOver / (ballCount / 6)) * 100) / 100,\n            })\n            setBowlers(bowlers)\n          }\n        }\n      }\n      if (inningNo === 1) {\n        setMatch((state) => {\n          const totalFours = batters.map((batter) => batter.four).reduce((prev, next) => prev + next)\n          const totalSixes = batters.map((batter) => batter.four).reduce((prev, next) => prev + next)\n          return {\n            ...state,\n            inning1: {\n              runs: totalRuns,\n              wickets: wicketCount,\n              runRate: crr,\n              overs: totalOvers,\n              four: totalFours,\n              six: totalSixes,\n              extra: extras,\n              batters,\n              bowlers,\n            },\n          }\n        })\n        setInningNo(2)\n        setCurrentRunStack([])\n        setTotalRuns(0)\n        setExtras({ total: 0, wide: 0, noBall: 0 })\n        setRunsByOver(0)\n        setWicketCount(0)\n        setTotalOvers(0)\n        setBallCount(0)\n        setOverCount(0)\n        setRecentOvers([])\n        setBatter1({})\n        setBatter2({})\n        setBatters([])\n        setBowlers([])\n        setBattingOrder(0)\n        setInputBowler('')\n        setBowler({})\n        setRemainingBalls(maxOver * 6)\n        setRemainingRuns(totalRuns + 1)\n        const bowlerNameElement = document.querySelector('.react-autosuggest__input')\n        bowlerNameElement.disabled = false\n        const batter1NameElement = document.getElementById('batter1Name')\n        batter1NameElement.value = ''\n        batter1NameElement.disabled = false\n        const batter2NameElement = document.getElementById('batter2Name')\n        batter2NameElement.value = ''\n        batter2NameElement.disabled = false\n        setStrikeValue('strike')\n        endInningButton.disabled = true\n      } else {\n        setMatch((state) => {\n          const totalFours = batters.map((batter) => batter.four).reduce((prev, next) => prev + next)\n          const totalSixes = batters.map((batter) => batter.four).reduce((prev, next) => prev + next)\n          return {\n            ...state,\n            inning2: {\n              runs: totalRuns,\n              wickets: wicketCount,\n              runRate: crr,\n              overs: totalOvers,\n              four: totalFours,\n              six: totalSixes,\n              extra: extras,\n              batters,\n              bowlers,\n            },\n          }\n        })\n        endInningButton.textContent = 'Reset'\n        setMatchEnded(true)\n      }\n    }\n  }\n  const handleBatter1Blur = (e) => {\n    let name = e.target.value\n    name = name.charAt(0).toUpperCase() + name.slice(1)\n    e.target.value = name\n    e.target.disabled = true\n    if (isBatter1Edited) {\n      setBatter1((state) => ({\n        ...state,\n        name: name,\n      }))\n      setBatter1Edited(false)\n    } else {\n      const randomNo = MathUtil.getRandomNo()\n      setBatter1({\n        id: name + randomNo,\n        name: name,\n        run: 0,\n        ball: 0,\n        four: 0,\n        six: 0,\n        strikeRate: 0,\n        onStrike: strikeValue === 'strike' ? true : false,\n        battingOrder: battingOrder + 1,\n        battingStatus: BATTING,\n      })\n      setBattingOrder(battingOrder + 1)\n    }\n  }\n  const handleBatter2Blur = (e) => {\n    let name = e.target.value\n    name = name.charAt(0).toUpperCase() + name.slice(1)\n    e.target.value = name\n    e.target.disabled = true\n    if (isBatter2Edited) {\n      setBatter2((state) => ({\n        ...state,\n        name: name,\n      }))\n      setBatter2Edited(false)\n    } else {\n      const randomNo = MathUtil.getRandomNo()\n      setBatter2({\n        id: name + randomNo,\n        name: name,\n        run: 0,\n        ball: 0,\n        four: 0,\n        six: 0,\n        strikeRate: 0,\n        onStrike: strikeValue === 'non-strike' ? true : false,\n        battingOrder: battingOrder + 1,\n        battingStatus: BATTING,\n      })\n      setBattingOrder(battingOrder + 1)\n    }\n  }\n  const handleBowlerBlur = (e) => {\n    let name = e.target.value\n    if (name !== '') {\n      name = name.charAt(0).toUpperCase() + name.slice(1)\n      setInputBowler(name)\n      e.target.value = name\n      e.target.disabled = true\n      if (isBowlerEdited) {\n        setBowler((state) => ({\n          ...state,\n          name: name,\n        }))\n        setBowlerEdited(false)\n      } else {\n        if (hasNameSuggested) {\n          setNameSuggested(false)\n        } else {\n          const randomNo = MathUtil.getRandomNo()\n          const id = name + randomNo\n          setBowler({\n            id,\n            name,\n          })\n        }\n      }\n    }\n  }\n  const onSuggestionsFetchRequested = (param) => {\n    const inputValue = param.value.trim().toLowerCase()\n    const suggestionArr = inputValue.length === 0 ? [] : bowlers.filter((bowlerObj) => bowlerObj.name.toLowerCase().includes(inputValue))\n    setSuggestions(suggestionArr)\n  }\n  const getSuggestionValue = (suggestion) => {\n    setBowler({\n      id: suggestion.id,\n      name: suggestion.name,\n    })\n    setNameSuggested(true)\n    return suggestion.name\n  }\n  const inputProps = {\n    value: inputBowler,\n    onChange: (e, { newValue }) => {\n      setInputBowler(newValue)\n    },\n    onBlur: handleBowlerBlur,\n  }\n  const overCompleted = (runsByOverParam, currentRunStackParam) => {\n    const bowlerNameElement = document.querySelector('.react-autosuggest__input')\n    if (overCount + 1 === maxOver) {\n      const endInningButton = document.getElementById('end-inning')\n      endInningButton.disabled = false\n    } else {\n      bowlerNameElement.disabled = false\n    }\n    disableAllScoreButtons()\n    setRecentOvers((state) => [\n      ...state,\n      { overNo: overCount + 1, bowler: bowler.name, runs: runsByOverParam, stack: currentRunStackParam },\n    ])\n    setInputBowler('')\n    setBowler({})\n    setCurrentRunStack([])\n    setRunsByOver(0)\n    setBallCount(0)\n    setOverCount(overCount + 1)\n    const index = bowlers.findIndex((blr) => blr.id === bowler.id)\n    let isMaidenOver = true\n    let countWicket = 0\n    let countNoBall = 0\n    let countWide = 0\n    const deliveries = ['1', '2', '3', '4', '6', 'wd']\n    for (let delivery of currentRunStackParam) {\n      delivery = delivery.toString()\n      if (deliveries.includes(delivery) || delivery.includes('nb')) {\n        isMaidenOver = false\n      }\n      if (delivery === 'W') {\n        countWicket++\n      }\n      if (delivery.includes('nb')) {\n        countNoBall++\n      }\n      if (delivery.includes('wd')) {\n        countWide++\n      }\n    }\n    if (index !== -1) {\n      const existingBowler = bowlers[index]\n      const { over, maiden, run, wicket, noBall, wide } = existingBowler\n      existingBowler.over = over + 1\n      existingBowler.maiden = isMaidenOver ? maiden + 1 : maiden\n      existingBowler.run = run + runsByOverParam\n      existingBowler.wicket = wicket + countWicket\n      existingBowler.noBall = noBall + countNoBall\n      existingBowler.wide = wide + countWide\n      existingBowler.economy = Math.round((existingBowler.run / existingBowler.over) * 100) / 100\n      bowlers[index] = existingBowler\n      setBowlers(bowlers)\n    } else {\n      setBowlers((state) => [\n        ...state,\n        {\n          id: bowler.id,\n          name: bowler.name,\n          over: 1,\n          maiden: isMaidenOver ? 1 : 0,\n          run: runsByOverParam,\n          wicket: countWicket,\n          noBall: countNoBall,\n          wide: countWide,\n          economy: runsByOverParam,\n        },\n      ])\n    }\n  }\n  const newBatter1 = () => {\n    const batter1NameElement = document.getElementById('batter1Name')\n    batter1NameElement.value = ''\n    batter1NameElement.disabled = false\n    const { id, name, run, ball, four, six, strikeRate, onStrike } = batter1\n    setBatters((state) => [\n      ...state,\n      {\n        id,\n        name,\n        run,\n        ball,\n        four,\n        six,\n        strikeRate,\n        onStrike,\n        battingOrder: batter1.battingOrder,\n        battingStatus: OUT,\n      },\n    ])\n    setBatter1({})\n  }\n  const newBatter2 = () => {\n    const batter2NameElement = document.getElementById('batter2Name')\n    batter2NameElement.value = ''\n    batter2NameElement.disabled = false\n    const { id, name, run, ball, four, six, strikeRate, onStrike } = batter2\n    setBatters((state) => [\n      ...state,\n      {\n        id,\n        name,\n        run,\n        ball,\n        four,\n        six,\n        strikeRate,\n        onStrike,\n        battingOrder: batter2.battingOrder,\n        battingStatus: OUT,\n      },\n    ])\n    setBatter2({})\n  }\n  const editBatter1Name = () => {\n    if (overCount !== maxOver && wicketCount !== 10 && !hasMatchEnded) {\n      const batter1NameElement = document.getElementById('batter1Name')\n      batter1NameElement.disabled = false\n      setBatter1Edited(true)\n    }\n  }\n  const editBatter2Name = () => {\n    if (overCount !== maxOver && wicketCount !== 10 && !hasMatchEnded) {\n      const batter2NameElement = document.getElementById('batter2Name')\n      batter2NameElement.disabled = false\n      setBatter2Edited(true)\n    }\n  }\n  const editBowlerName = () => {\n    if (overCount !== maxOver && wicketCount !== 10 && !hasMatchEnded) {\n      const bowlerNameElement = document.querySelector('.react-autosuggest__input')\n      bowlerNameElement.disabled = false\n      setBowlerEdited(true)\n    }\n  }\n  const undoWicket = (isNoBallParam) => {\n    if (!isNoBallParam) {\n      setBallCount(ballCount - 1)\n      setTotalOvers(Math.round((totalOvers - 0.1) * 10) / 10)\n    }\n    setWicketCount(wicketCount - 1)\n    const batter = batters[batters.length - 1]\n    const { id, name, run, ball, four, six, strikeRate, onStrike } = batter\n    if (batter1.name === undefined || batter1.onStrike) {\n      const batter1NameElement = document.getElementById('batter1Name')\n      batter1NameElement.value = batter.name\n      batter1NameElement.disabled = true\n      setBatter1({\n        id,\n        name,\n        run,\n        ball,\n        four,\n        six,\n        strikeRate,\n        onStrike,\n        battingOrder: batter.battingOrder,\n        battingStatus: BATTING,\n      })\n      if (!batter.onStrike) {\n        changeStrikeRadio()\n        setBatter2((state) => ({\n          ...state,\n          onStrike: true,\n        }))\n      }\n    } else if (batter2.name === undefined || batter2.onStrike) {\n      const batter2NameElement = document.getElementById('batter2Name')\n      batter2NameElement.value = batter.name\n      batter2NameElement.disabled = true\n      setBatter2({\n        id,\n        name,\n        run,\n        ball,\n        four,\n        six,\n        strikeRate,\n        onStrike,\n        battingOrder: batter.battingOrder,\n        battingStatus: BATTING,\n      })\n      if (!batter.onStrike) {\n        changeStrikeRadio()\n        setBatter1((state) => ({\n          ...state,\n          onStrike: true,\n        }))\n      }\n    }\n    batters.pop()\n    setBatters(batters)\n  }\n  const undoRun = (run, isNoBallParam) => {\n    if (isNoBallParam) {\n      setTotalRuns(totalRuns - (run + 1))\n      setRunsByOver(runsByOver - (run + 1))\n    } else {\n      setTotalRuns(totalRuns - run)\n      setRunsByOver(runsByOver - run)\n      setBallCount(ballCount - 1)\n      setTotalOvers(Math.round((totalOvers - 0.1) * 10) / 10)\n      currentRunStack.pop()\n      setCurrentRunStack(currentRunStack)\n    }\n    if (batter1.onStrike) {\n      if (run % 2 === 0) {\n        setBatter1((state) => {\n          const updatedRun = state.run - run\n          const updatedBall = state.ball - 1\n          const updatedSr = updatedRun / updatedBall\n          const sr = Math.round(isNaN(updatedSr) ? 0 : updatedSr * 100 * 100) / 100\n          let four = state.four\n          if (run === 4) {\n            four = four - 1\n          }\n          let six = state.six\n          if (run === 6) {\n            six = six - 1\n          }\n          return {\n            ...state,\n            run: updatedRun,\n            ball: updatedBall,\n            four: four,\n            six: six,\n            strikeRate: sr,\n          }\n        })\n      } else {\n        changeStrikeRadio()\n        switchBatterStrike()\n        setBatter2((state) => {\n          const updatedRun = state.run - run\n          const updatedBall = state.ball - 1\n          const updatedSr = updatedRun / updatedBall\n          const sr = Math.round(isNaN(updatedSr) ? 0 : updatedSr * 100 * 100) / 100\n          let four = state.four\n          if (run === 4) {\n            four = four - 1\n          }\n          let six = state.six\n          if (run === 6) {\n            six = six - 1\n          }\n          return {\n            ...state,\n            run: updatedRun,\n            ball: updatedBall,\n            four: four,\n            six: six,\n            strikeRate: sr,\n          }\n        })\n      }\n    } else if (batter2.onStrike) {\n      if (run % 2 === 0) {\n        setBatter2((state) => {\n          const updatedRun = state.run - run\n          const updatedBall = state.ball - 1\n          const updatedSr = updatedRun / updatedBall\n          const sr = Math.round(isNaN(updatedSr) ? 0 : updatedSr * 100 * 100) / 100\n          let four = state.four\n          if (run === 4) {\n            four = four - 1\n          }\n          let six = state.six\n          if (run === 6) {\n            six = six - 1\n          }\n          return {\n            ...state,\n            run: updatedRun,\n            ball: updatedBall,\n            four: four,\n            six: six,\n            strikeRate: sr,\n          }\n        })\n      } else {\n        changeStrikeRadio()\n        switchBatterStrike()\n        setBatter1((state) => {\n          const updatedRun = state.run - run\n          const updatedBall = state.ball - 1\n          const updatedSr = updatedRun / updatedBall\n          const sr = Math.round(isNaN(updatedSr) ? 0 : updatedSr * 100 * 100) / 100\n          let four = state.four\n          if (run === 4) {\n            four = four - 1\n          }\n          let six = state.six\n          if (run === 6) {\n            six = six - 1\n          }\n          return {\n            ...state,\n            run: updatedRun,\n            ball: updatedBall,\n            four: four,\n            six: six,\n            strikeRate: sr,\n          }\n        })\n      }\n    }\n  }\n  const undoDelivery = () => {\n    if (currentRunStack.length > 0) {\n      const last = currentRunStack[currentRunStack.length - 1]\n      if (typeof last === 'number') {\n        const run = parseInt(last)\n        undoRun(run, false)\n      } else {\n        currentRunStack.pop()\n        setCurrentRunStack(currentRunStack)\n        if (last === 'wd') {\n          setTotalRuns(totalRuns - 1)\n          setExtras((state) => ({\n            ...state,\n            total: state.total - 1,\n            wide: state.wide - 1,\n          }))\n        } else if (last === 'W') {\n          undoWicket(false)\n        } else {\n          const lastChar = last.substr(last.length - 1)\n          const run = parseInt(lastChar)\n          if (isNaN(run)) {\n            setTotalRuns(totalRuns - 1)\n            setRunsByOver(runsByOver - 1)\n            if (last !== 'nb') {\n              undoWicket(true)\n            }\n          } else {\n            undoRun(run, true)\n          }\n        }\n      }\n    }\n  }\n  const handleStrikeChange = (e) => {\n    changeStrikeRadio(e.target.value)\n    if (e.target.value === 'strike') {\n      switchBatterStrike('batter1')\n    } else {\n      switchBatterStrike('batter2')\n    }\n  }\n  const changeStrikeRadio = (strikeParam) => {\n    if (strikeParam === undefined) {\n      setStrikeValue(strikeValue === 'strike' ? 'non-strike' : 'strike')\n    } else {\n      setStrikeValue(strikeParam)\n    }\n  }\n  const switchBatterStrike = (strikeParam) => {\n    if (strikeParam === undefined) {\n      setBatter1((state) => ({\n        ...state,\n        onStrike: !state.onStrike,\n      }))\n      setBatter2((state) => ({\n        ...state,\n        onStrike: !state.onStrike,\n      }))\n    } else {\n      if (strikeParam === 'batter1') {\n        setBatter1((state) => ({\n          ...state,\n          onStrike: true,\n        }))\n        setBatter2((state) => ({\n          ...state,\n          onStrike: false,\n        }))\n      } else if (strikeParam === 'batter2') {\n        setBatter1((state) => ({\n          ...state,\n          onStrike: false,\n        }))\n        setBatter2((state) => ({\n          ...state,\n          onStrike: true,\n        }))\n      }\n    }\n  }\n  const handleRun = (run) => {\n    if (isNoBall) {\n      setCurrentRunStack((state) => [...state, 'nb' + run])\n      removeNoBallEffect()\n    } else {\n      setBallCount(ballCount + 1)\n      setCurrentRunStack((state) => [...state, run])\n    }\n    setTotalRuns(totalRuns + run)\n    setRunsByOver(runsByOver + run)\n    if (inningNo === 2) {\n      if (!isNoBall) {\n        setRemainingBalls(remainingBalls - 1)\n      }\n      setRemainingRuns(remainingRuns - run)\n    }\n    if (ballCount === 5) {\n      if (isNoBall) {\n        if (run % 2 !== 0) {\n          changeStrikeRadio()\n        }\n      } else {\n        setTotalOvers(overCount + 1)\n        const arr = [...currentRunStack]\n        arr.push(run)\n        overCompleted(runsByOver + run, arr)\n        if (run % 2 === 0) {\n          changeStrikeRadio()\n        }\n      }\n    } else {\n      if (!isNoBall) {\n        setTotalOvers(Math.round((totalOvers + 0.1) * 10) / 10)\n      }\n      if (run % 2 !== 0) {\n        changeStrikeRadio()\n      }\n    }\n    if (batter1.onStrike) {\n      setBatter1((state) => {\n        const updatedRun = state.run + run\n        const updatedBall = state.ball + 1\n        const sr = Math.round((updatedRun / updatedBall) * 100 * 100) / 100\n        let four = state.four\n        if (run === 4) {\n          four = four + 1\n        }\n        let six = state.six\n        if (run === 6) {\n          six = six + 1\n        }\n        return {\n          ...state,\n          run: updatedRun,\n          ball: updatedBall,\n          four: four,\n          six: six,\n          strikeRate: sr,\n        }\n      })\n      if (isNoBall) {\n        if (run % 2 !== 0) {\n          switchBatterStrike()\n        }\n      } else {\n        if ((ballCount === 5 && run % 2 === 0) || (ballCount !== 5 && run % 2 !== 0)) {\n          switchBatterStrike()\n        }\n      }\n    } else {\n      setBatter2((state) => {\n        const updatedRun = state.run + run\n        const updatedBall = state.ball + 1\n        const sr = Math.round((updatedRun / updatedBall) * 100 * 100) / 100\n        let four = state.four\n        if (run === 4) {\n          four = four + 1\n        }\n        let six = state.six\n        if (run === 6) {\n          six = six + 1\n        }\n        return {\n          ...state,\n          run: updatedRun,\n          ball: updatedBall,\n          four: four,\n          six: six,\n          strikeRate: sr,\n        }\n      })\n      if ((ballCount === 5 && run % 2 === 0) || (ballCount !== 5 && run % 2 !== 0)) {\n        switchBatterStrike()\n      }\n    }\n  }\n  const handleNoBall = () => {\n    if (inningNo === 2) {\n      setRemainingRuns(remainingRuns - 1)\n    }\n    setTotalRuns(totalRuns + 1)\n    setRunsByOver(runsByOver + 1)\n    setExtras((state) => ({\n      ...state,\n      total: state.total + 1,\n      noBall: state.noBall + 1,\n    }))\n    addNoBallEffect()\n  }\n  const addNoBallEffect = () => {\n    const scoreTypesButtons = document.querySelectorAll('.score-types-button')\n    for (let i = 0; i < scoreTypesButtons.length; i++) {\n      scoreTypesButtons[i].classList.add('score-types-button-noball')\n    }\n    setNoBall(true)\n  }\n  const removeNoBallEffect = () => {\n    const scoreTypesButtons = document.querySelectorAll('.score-types-button')\n    for (let i = 0; i < scoreTypesButtons.length; i++) {\n      scoreTypesButtons[i].classList.remove('score-types-button-noball')\n    }\n    setNoBall(false)\n  }\n  const handleWide = () => {\n    if (isNoBall) {\n      setCurrentRunStack((state) => [...state, 'nb'])\n      removeNoBallEffect()\n    } else {\n      if (inningNo === 2) {\n        setRemainingRuns(remainingRuns - 1)\n      }\n      setCurrentRunStack((state) => [...state, 'wd'])\n      setTotalRuns(totalRuns + 1)\n      setRunsByOver(runsByOver + 1)\n      setExtras((state) => ({\n        ...state,\n        total: state.total + 1,\n        wide: state.wide + 1,\n      }))\n    }\n  }\n  const handleWicket = (isRunOut, playerId) => {\n    setRunOutPlayerId('')\n    if (ballCount === 5) {\n      if (isNoBall) {\n        removeNoBallEffect()\n        if (isRunOut) {\n          setCurrentRunStack((state) => [...state, 'nbW'])\n          setWicketCount(wicketCount + 1)\n          disableAllScoreButtons()\n        } else {\n          setCurrentRunStack((state) => [...state, 'nb'])\n        }\n      } else {\n        setTotalOvers(overCount + 1)\n        const arr = [...currentRunStack]\n        arr.push('W')\n        overCompleted(runsByOver, arr)\n        setWicketCount(wicketCount + 1)\n        disableAllScoreButtons()\n      }\n    } else {\n      if (isNoBall) {\n        removeNoBallEffect()\n        if (isRunOut) {\n          setCurrentRunStack((state) => [...state, 'nbW'])\n          setWicketCount(wicketCount + 1)\n          disableAllScoreButtons()\n        } else {\n          setCurrentRunStack((state) => [...state, 'nb'])\n        }\n      } else {\n        setBallCount(ballCount + 1)\n        setCurrentRunStack((state) => [...state, 'W'])\n        setTotalOvers(Math.round((totalOvers + 0.1) * 10) / 10)\n        setWicketCount(wicketCount + 1)\n        disableAllScoreButtons()\n      }\n    }\n    if (isRunOut) {\n      if (batter1.id === playerId) {\n        newBatter1()\n        changeStrikeRadio('strike')\n        switchBatterStrike('batter1')\n      } else {\n        newBatter2()\n        changeStrikeRadio('non-strike')\n        switchBatterStrike('batter2')\n      }\n    } else {\n      if (!isNoBall) {\n        if (batter1.onStrike) {\n          newBatter1()\n        } else {\n          newBatter2()\n        }\n      }\n    }\n    if (isNoBall) {\n      if (isRunOut && wicketCount + 1 === 10) {\n        const endInningButton = document.getElementById('end-inning')\n        endInningButton.disabled = false\n        const bowlerNameElement = document.querySelector('.react-autosuggest__input')\n        bowlerNameElement.disabled = true\n        const batter1NameElement = document.getElementById('batter1Name')\n        batter1NameElement.disabled = true\n        const batter2NameElement = document.getElementById('batter2Name')\n        batter2NameElement.disabled = true\n        setInputBowler('')\n      }\n    } else {\n      if (wicketCount + 1 === 10) {\n        const endInningButton = document.getElementById('end-inning')\n        endInningButton.disabled = false\n        const bowlerNameElement = document.querySelector('.react-autosuggest__input')\n        bowlerNameElement.disabled = true\n        const batter1NameElement = document.getElementById('batter1Name')\n        batter1NameElement.disabled = true\n        const batter2NameElement = document.getElementById('batter2Name')\n        batter2NameElement.disabled = true\n        setInputBowler('')\n      }\n    }\n  }\n  const handleCloseModal = () => {\n    if (outType !== '') {\n      if (outType === RUN_OUT) {\n        if (runOutPlayerId !== '') {\n          handleWicket(true, runOutPlayerId)\n        }\n      } else {\n        handleWicket(false, '')\n      }\n    }\n    setModalOpen(false)\n    setOutType('')\n    setRunOutPlayerId('')\n  }\n  const handleOutTypeChange = (e) => {\n    const outTypeValue = e.target.value\n    setOutType(outTypeValue)\n    if (outTypeValue === RUN_OUT) {\n      const runOutPlayerElement = document.getElementById('run-out-player')\n      runOutPlayerElement.classList.remove('hide')\n      const runOutPlayerErrorElement = document.getElementById('run-out-player-error')\n      runOutPlayerErrorElement.classList.remove('hide')\n    }\n  }\n  const handleRunOutPlayerChange = (e) => {\n    const playerId = e.target.value\n    const runOutPlayerErrorElement = document.getElementById('run-out-player-error')\n    runOutPlayerErrorElement.classList.add('hide')\n    setRunOutPlayerId(playerId)\n  }\n  const endMatch = () => {\n    disableAllScoreButtons()\n    const endInningButton = document.getElementById('end-inning')\n    if (endInningButton.textContent === 'Score Board') {\n      endInningButton.disabled = false\n    }\n  }\n  const disableAllScoreButtons = () => {\n    const scoreTypesButtons = document.querySelectorAll('.score-types-button')\n    for (let i = 0; i < scoreTypesButtons.length; i++) {\n      scoreTypesButtons[i].disabled = true\n    }\n  }\n  const enableAllScoreButtons = () => {\n    const scoreTypesButtons = document.querySelectorAll('.score-types-button')\n    for (let i = 0; i < scoreTypesButtons.length; i++) {\n      scoreTypesButtons[i].disabled = false\n    }\n  }\n  if (batter1.name !== undefined && batter2.name !== undefined && inputBowler !== '') {\n    enableAllScoreButtons()\n  }\n  let rrr = (remainingRuns / (remainingBalls / 6)).toFixed(2)\n  rrr = isFinite(rrr) ? rrr : 0\n  const overs = overCount + ballCount / 6\n  let crr = (totalRuns / overs).toFixed(2)\n  crr = isFinite(crr) ? crr : 0\n  const inning1 = match.inning1\n  const inning2 = match.inning2\n  const scoringTeam = batting === team1 ? team1 : team2\n  const chessingTeam = scoringTeam === team1 ? team2 : team1\n  let winningMessage = `${inningNo === 1 ? scoringTeam : chessingTeam} needs ${remainingRuns} ${\n    remainingRuns <= 1 ? 'run' : 'runs'\n  } in ${remainingBalls} ${remainingBalls <= 1 ? 'ball' : 'balls'} to win`\n  if (inningNo === 2) {\n    var target = inning1.runs + 1\n    if (wicketCount < 10 && overCount <= maxOver && totalRuns >= target) {\n      winningMessage = `${chessingTeam} won by ${10 - wicketCount} wickets`\n      endMatch()\n    }\n    if ((wicketCount >= 10 || overCount >= maxOver) && totalRuns < target - 1) {\n      winningMessage = `${scoringTeam} won by ${target - totalRuns - 1} runs`\n      endMatch()\n    }\n    if (wicketCount < 10 && overCount === maxOver && totalRuns === target - 1) {\n      winningMessage = 'Match Tied'\n      endMatch()\n    }\n  }\n  const welcomeContent = (\n    <>\n      <div></div>\n      <div>Welcome to Gully Cricket Score Board</div>\n      <div></div>\n    </>\n  )\n  const firstInningCompletedContent = (\n    <>\n      {overCount === maxOver && <div>1st inning completed</div>}\n      {wicketCount === 10 && <div>All Out</div>}\n      <div>Please click \"End Inning\" button</div>\n    </>\n  )\n  const remainingRunsContent = (\n    <>\n      <div>Target: {target}</div>\n      <div>{winningMessage}</div>\n      <div>RRR: {isNaN(rrr) ? 0 : rrr}</div>\n    </>\n  )\n  return (\n    <div className='container'>\n      <div className='inning'>\n        <div>\n          {team1} vs {team2}, {inningNo === 1 ? '1st' : '2nd'} Inning\n        </div>\n        <div>\n          <button id='end-inning' onClick={handleEndInning}>\n            {inningNo === 1 ? 'End Inning' : 'Score Board'}\n          </button>\n        </div>\n      </div>\n      <div id='badge' className='badge badge-flex'>\n        {inningNo === 2 ? remainingRunsContent : overCount === maxOver || wicketCount === 10 ? firstInningCompletedContent : welcomeContent}\n      </div>\n      <div className='score-container'>\n        <div>\n          <Modal\n            open={isModalOpen}\n            onClose={handleCloseModal}\n            aria-labelledby='modal-modal-title'\n            aria-describedby='modal-modal-description'\n          >\n            <Box sx={radioGroupBoxstyle}>\n              <FormControl component='fieldset'>\n                <RadioGroup\n                  row\n                  aria-label='wicket'\n                  name='row-radio-buttons-group'\n                  onChange={handleOutTypeChange}\n                  sx={{ alignItems: 'center' }}\n                >\n                  <FormControlLabel\n                    value={CATCH}\n                    control={\n                      <Radio\n                        sx={{\n                          '&.Mui-checked': {\n                            color: pink[600],\n                          },\n                        }}\n                      />\n                    }\n                    label={CATCH}\n                  />\n                  <FormControlLabel\n                    value={STUMP}\n                    control={\n                      <Radio\n                        sx={{\n                          '&.Mui-checked': {\n                            color: pink[600],\n                          },\n                        }}\n                      />\n                    }\n                    label={STUMP}\n                  />\n                  <FormControlLabel\n                    value={HIT_WICKET}\n                    control={\n                      <Radio\n                        sx={{\n                          '&.Mui-checked': {\n                            color: pink[600],\n                          },\n                        }}\n                      />\n                    }\n                    label={HIT_WICKET}\n                  />\n                  <FormControlLabel\n                    value={BOLD}\n                    control={\n                      <Radio\n                        sx={{\n                          '&.Mui-checked': {\n                            color: pink[600],\n                          },\n                        }}\n                      />\n                    }\n                    label={BOLD}\n                  />\n                  <FormControlLabel\n                    value={RUN_OUT}\n                    control={\n                      <Radio\n                        sx={{\n                          '&.Mui-checked': {\n                            color: pink[600],\n                          },\n                        }}\n                      />\n                    }\n                    label={RUN_OUT}\n                  />\n                  <select defaultValue='' id='run-out-player' className='run-out-player hide' onChange={handleRunOutPlayerChange}>\n                    <option value='' disabled>\n                      select option\n                    </option>\n                    <option value={batter1.id}>{batter1.name}</option>\n                    <option value={batter2.id}>{batter2.name}</option>\n                  </select>\n                </RadioGroup>\n                <div id='run-out-player-error' className='run-out-player-error hide'>\n                  Please select run out player name\n                </div>\n              </FormControl>\n            </Box>\n          </Modal>\n        </div>\n        <div className='score'>\n          <div>\n            {inningNo === 1 ? scoringTeam : chessingTeam} : {totalRuns}/{wicketCount} ({totalOvers})\n          </div>\n          <div>CRR : {isNaN(crr) ? 0 : crr}</div>\n        </div>\n        <div className='batting-container'>\n          <table>\n            <thead>\n              <tr>\n                <td className='score-types padding-left'>Batting</td>\n                <td className='score-types'>R(B)</td>\n                <td className='score-types text-center'>4s</td>\n                <td className='score-types text-center'>6s</td>\n                <td className='score-types text-center'>SR</td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td className='score-types'>\n                  <span id='strike'>\n                    <Radio\n                      size='small'\n                      checked={strikeValue === 'strike'}\n                      onChange={handleStrikeChange}\n                      value='strike'\n                      name='radio-buttons'\n                      inputProps={{ 'aria-label': 'strike' }}\n                      style={{ padding: '0 4px 0 2px' }}\n                    />\n                  </span>\n                  <input type='text' id='batter1Name' className='batter-name' onBlur={handleBatter1Blur} />\n                  <IconButton color='primary' className='icon-button' onClick={editBatter1Name}>\n                    <EditIcon className='icon-size' />\n                  </IconButton>\n                </td>\n                <td className='score-types'>{batter1.run === undefined ? `0(0)` : `${batter1.run}(${batter1.ball})`}</td>\n                <td className='score-types'>{batter1.four === undefined ? 0 : batter1.four}</td>\n                <td className='score-types'>{batter1.six === undefined ? 0 : batter1.six}</td>\n                <td className='score-types'>{batter1.strikeRate === undefined ? 0 : batter1.strikeRate}</td>\n              </tr>\n              <tr>\n                <td className='score-types'>\n                  <span id='non-strike'>\n                    <Radio\n                      size='small'\n                      checked={strikeValue === 'non-strike'}\n                      onChange={handleStrikeChange}\n                      value='non-strike'\n                      name='radio-buttons'\n                      inputProps={{ 'aria-label': 'non-strike' }}\n                      style={{ padding: '0 4px 0 2px' }}\n                    />\n                  </span>\n                  <input type='text' id='batter2Name' className='batter-name' onBlur={handleBatter2Blur} />\n                  <IconButton color='primary' className='icon-button' onClick={editBatter2Name}>\n                    <EditIcon className='icon-size' />\n                  </IconButton>\n                </td>\n                <td className='score-types'>{batter2.run === undefined ? `0(0)` : `${batter2.run}(${batter2.ball})`}</td>\n                <td className='score-types'>{batter2.four === undefined ? 0 : batter2.four}</td>\n                <td className='score-types'>{batter2.six === undefined ? 0 : batter2.six}</td>\n                <td className='score-types'>{batter2.strikeRate === undefined ? 0 : batter2.strikeRate}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='bowler-container'>\n          <div className='bowler'>\n            Bowler:\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={() => {\n                setSuggestions([])\n              }}\n              getSuggestionValue={getSuggestionValue}\n              renderSuggestion={(suggestion) => <div>{suggestion.name}</div>}\n              inputProps={inputProps}\n            />\n            <IconButton color='primary' className='icon-button' onClick={editBowlerName}>\n              <EditIcon className='icon-size' />\n            </IconButton>\n          </div>\n          <div className='bowler-runs'>\n            {currentRunStack.map((run, i) => (\n              <div key={i}>{run}</div>\n            ))}\n            <IconButton color='warning' className='icon-button' onClick={undoDelivery}>\n              <DeleteIcon className='delete-icon-size' />\n            </IconButton>\n          </div>\n        </div>\n        <div className='score-types-container'>\n          <table>\n            <tbody>\n              <tr>\n                <td className='score-types' onClick={() => handleRun(0)}>\n                  <button className='score-types-button' disabled>\n                    0\n                  </button>\n                </td>\n                <td className='score-types' onClick={() => handleRun(1)}>\n                  <button className='score-types-button' disabled>\n                    1\n                  </button>\n                </td>\n                <td className='score-types' onClick={() => handleRun(2)}>\n                  <button className='score-types-button' disabled>\n                    2\n                  </button>\n                </td>\n                <td className='score-types' onClick={handleNoBall}>\n                  <button className='score-types-button' disabled>\n                    nb\n                  </button>\n                </td>\n                <td rowSpan='2' className='score-types' onClick={() => setModalOpen(true)}>\n                  <button className='score-types-button' disabled>\n                    W\n                  </button>\n                </td>\n              </tr>\n              <tr>\n                <td className='score-types' onClick={() => handleRun(3)}>\n                  <button className='score-types-button' disabled>\n                    3\n                  </button>\n                </td>\n                <td className='score-types' onClick={() => handleRun(4)}>\n                  <button className='score-types-button' disabled>\n                    4\n                  </button>\n                </td>\n                <td className='score-types' onClick={() => handleRun(6)}>\n                  <button className='score-types-button' disabled>\n                    6\n                  </button>\n                </td>\n                <td className='score-types' onClick={handleWide}>\n                  <button className='score-types-button' disabled>\n                    wd\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div className='extras-container'>\n          <div>Extras: {extras.total}</div>\n          <div>Wd: {extras.wide}</div>\n          <div>NB: {extras.noBall}</div>\n        </div>\n        <div className='recent-over-container'>\n          <div className='recent-over-text'>Recent Overs</div>\n          <div className='recent-over-details'>\n            <table>\n              <tbody>\n                {recentOvers.map((recentOver, i) => (\n                  <tr key={i}>\n                    <td>{recentOver.overNo}.</td>\n                    <td>{recentOver.bowler}:</td>\n                    <td>\n                      <div className='recent-over-runs'>\n                        {recentOver.stack.map((run, index) => (\n                          <div key={index}>{run}</div>\n                        ))}\n                      </div>\n                    </td>\n                    <td className='recent-over-total-run'>\n                      <div>{recentOver.runs}</div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='score-board-container'>\n          <div className='score-board-text text-center'>Score Board</div>\n          {/* Inning1 Starts here */}\n          <div>\n            <div className='score-board-innings'>\n              <div>{scoringTeam} Innings</div>\n              <div>RR:{inningNo === 1 ? crr : inning1.runRate}</div>\n              <div>\n                {inningNo === 1 ? totalRuns : inning1.runs}-{inningNo === 1 ? wicketCount : inning1.wickets} (\n                {inningNo === 1 ? totalOvers : inning1.overs} Ov)\n              </div>\n            </div>\n            <div className='sb-batting'>\n              <table>\n                <thead>\n                  <tr>\n                    <td className='score-types padding-left'>Batter</td>\n                    <td className='score-types'>R(B)</td>\n                    <td className='score-types text-center'>4s</td>\n                    <td className='score-types text-center'>6s</td>\n                    <td className='score-types text-center'>SR</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {inning1.batters.map((batter, i) => {\n                    return (\n                      <tr key={i}>\n                        <td className='score-types padding-left'>{batter.name}</td>\n                        <td className='score-types'>\n                          {batter.run}({batter.ball})\n                        </td>\n                        <td className='score-types text-center'>{batter.four}</td>\n                        <td className='score-types text-center'>{batter.six}</td>\n                        <td className='score-types text-center'>{batter.strikeRate}</td>\n                      </tr>\n                    )\n                  })}\n                  <tr>\n                    <td className='score-types padding-left'>Extras:</td>\n                    <td className='score-types'>{inningNo === 1 ? extras.total : inning1.extra.total}</td>\n                    <td className='score-types text-center'>wd:{inningNo === 1 ? extras.wide : inning1.extra.wide}</td>\n                    <td className='score-types text-center'>nb:{inningNo === 1 ? extras.noBall : inning1.extra.noBall}</td>\n                    <td className='score-types text-center'></td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div className='sb-bowling'>\n              <table>\n                <thead>\n                  <tr>\n                    <td className='score-types padding-left'>Bowler</td>\n                    <td className='score-types'>O</td>\n                    <td className='score-types text-center'>M</td>\n                    <td className='score-types text-center'>R</td>\n                    <td className='score-types text-center'>W</td>\n                    <td className='score-types text-center'>NB</td>\n                    <td className='score-types text-center'>WD</td>\n                    <td className='score-types text-center'>ECO</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {inning1.bowlers.map((blr, i) => {\n                    const { name, over, maiden, run, wicket, noBall, wide, economy } = blr\n                    return (\n                      <tr key={i}>\n                        <td className='score-types padding-left'>{name}</td>\n                        <td className='score-types'>{over}</td>\n                        <td className='score-types text-center'>{maiden}</td>\n                        <td className='score-types text-center'>{run}</td>\n                        <td className='score-types text-center'>{wicket}</td>\n                        <td className='score-types text-center'>{noBall}</td>\n                        <td className='score-types text-center'>{wide}</td>\n                        <td className='score-types text-center'>{economy}</td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          {/* Inning2 Starts here */}\n          {inningNo === 2 && (\n            <div>\n              <div className='score-board-innings'>\n                <div>{chessingTeam} Innings</div>\n                <div>RR:{inningNo === 2 ? crr : inning2.runRate}</div>\n                <div>\n                  {hasMatchEnded ? inning2.runs : totalRuns}-{hasMatchEnded ? inning2.wickets : wicketCount} (\n                  {hasMatchEnded ? inning2.overs : totalOvers} Ov)\n                </div>\n              </div>\n              <div className='sb-batting'>\n                <table>\n                  <thead>\n                    <tr>\n                      <td className='score-types padding-left'>Batter</td>\n                      <td className='score-types'>R(B)</td>\n                      <td className='score-types text-center'>4s</td>\n                      <td className='score-types text-center'>6s</td>\n                      <td className='score-types text-center'>SR</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {inning2.batters.map((batter, i) => {\n                      return (\n                        <tr key={i}>\n                          <td className='score-types padding-left'>{batter.name}</td>\n                          <td className='score-types'>\n                            {batter.run}({batter.ball})\n                          </td>\n                          <td className='score-types text-center'>{batter.four}</td>\n                          <td className='score-types text-center'>{batter.six}</td>\n                          <td className='score-types text-center'>{batter.strikeRate}</td>\n                        </tr>\n                      )\n                    })}\n                    <tr>\n                      <td className='score-types padding-left'>Extras:</td>\n                      <td className='score-types'>{hasMatchEnded ? inning2.extra.total : extras.total}</td>\n                      <td className='score-types text-center'>wd:{hasMatchEnded ? inning2.extra.wide : extras.wide}</td>\n                      <td className='score-types text-center'>nb:{hasMatchEnded ? inning2.extra.noBall : extras.noBall}</td>\n                      <td className='score-types text-center'></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div className='sb-bowling'>\n                <table>\n                  <thead>\n                    <tr>\n                      <td className='score-types padding-left'>Bowler</td>\n                      <td className='score-types'>O</td>\n                      <td className='score-types text-center'>M</td>\n                      <td className='score-types text-center'>R</td>\n                      <td className='score-types text-center'>W</td>\n                      <td className='score-types text-center'>NB</td>\n                      <td className='score-types text-center'>WD</td>\n                      <td className='score-types text-center'>ECO</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {inning2.bowlers.map((blr, i) => {\n                      const { name, over, maiden, run, wicket, noBall, wide, economy } = blr\n                      return (\n                        <tr key={i}>\n                          <td className='score-types padding-left'>{name}</td>\n                          <td className='score-types'>{over}</td>\n                          <td className='score-types text-center'>{maiden}</td>\n                          <td className='score-types text-center'>{run}</td>\n                          <td className='score-types text-center'>{wicket}</td>\n                          <td className='score-types text-center'>{noBall}</td>\n                          <td className='score-types text-center'>{wide}</td>\n                          <td className='score-types text-center'>{economy}</td>\n                        </tr>\n                      )\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ScoreBoard\n","import { TextField } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Stepper from '@material-ui/core/Stepper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@mui/material/FormControl'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport FormLabel from '@mui/material/FormLabel'\nimport Radio from '@mui/material/Radio'\nimport RadioGroup from '@mui/material/RadioGroup'\nimport { Formik } from 'formik'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nconst useStyles = makeStyles((theme) => ({\n  mainContainer: {\n    margin: 'auto',\n    border: '1px solid #ccc',\n    borderRadius: '4px',\n  },\n  formContainer: {\n    margin: '2rem 0 2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  formGroup: {\n    marginBottom: '2rem',\n  },\n  resetContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  backButton: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  textField: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  textfieldWidth: {\n    width: 200,\n  },\n  teamNameHeading: {\n    fontWeight: 'bold',\n    // padding: '16px',\n    // paddingBottom: '0px',\n  },\n  center: {\n    textAlign: 'center',\n  },\n}))\nconst HorizontalStepper = () => {\n  const history = useHistory()\n  const classes = useStyles()\n  const [activeStep, setActiveStep] = React.useState(0)\n  const [isSubmitting, setSubmitting] = React.useState(false)\n\n  const steps = ['Team', 'Overs', 'Batting']\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1)\n  }\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n  const initialValues = {\n    team1: '',\n    team2: '',\n    maxOver: '',\n    batting: '',\n  }\n  const validationSchema = [\n    Yup.object().shape({\n      team1: Yup.string().required('Team Name is required'),\n      team2: Yup.string().required('Team Name is required'),\n    }),\n    Yup.object().shape({\n      maxOver: Yup.string().required('Over is required'),\n    }),\n    Yup.object().shape({\n      batting: Yup.string().required('Please choose who is Batting'),\n    }),\n  ]\n  const currentValidationSchema = validationSchema[activeStep]\n  function isLastStep() {\n    return activeStep === steps.length - 1\n  }\n  return (\n    <div>\n      <Stepper activeStep={activeStep} orientation='horizontal'>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div className={classes.mainContainer}>\n        <Formik\n          enableReinitialize\n          validationSchema={currentValidationSchema}\n          initialValues={initialValues}\n          onSubmit={(values, actions) => {\n            handleNext()\n            actions.setTouched({})\n            actions.setSubmitting(false)\n            if (isLastStep()) {\n              setSubmitting(true)\n              const data = JSON.stringify(values)\n              localStorage.setItem('data', data)\n              history.push('/score')\n              setSubmitting(false)\n            }\n          }}\n        >\n          {(prp) => {\n            const { values, touched, errors, handleChange, handleBlur, handleSubmit, setFieldValue } = prp\n            return (\n              <form onSubmit={handleSubmit}>\n                <div className={classes.formContainer}>\n                  {activeStep === 0 && (\n                    <div>\n                      <div className={classes.formGroup}>\n                        <TextField\n                          id='team1'\n                          name='team1'\n                          label='Team1 Name*'\n                          value={values.team1}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          helperText={errors.team1 && touched.team1 && errors.team1}\n                          error={errors.team1 && touched.team1}\n                          className={classes.textfieldWidth}\n                        />\n                      </div>\n                      <div>\n                        <Typography className={classes.center}>VS</Typography>\n                      </div>\n                      <div className={classes.formGroup}>\n                        <TextField\n                          id='team2'\n                          name='team2'\n                          label='Team2 Name*'\n                          value={values.team2}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          helperText={errors.team2 && touched.team2 && errors.team2}\n                          error={errors.team2 && touched.team2}\n                          className={classes.textfieldWidth}\n                        />\n                      </div>\n                    </div>\n                  )}\n                  {activeStep === 1 && (\n                    <div>\n                      <div className={classes.formGroup} id='team1-players'>\n                        <Typography className={classes.teamNameHeading}>How many overs?</Typography>\n                        <div className={classes.formGroup}>\n                          <TextField\n                            id='maxOver'\n                            name='maxOver'\n                            label='Overs*'\n                            value={values.maxOver}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            helperText={errors.maxOver && touched.maxOver && errors.maxOver}\n                            error={errors.maxOver && touched.maxOver}\n                            className={classes.textfieldWidth}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {activeStep === 2 && (\n                    <div>\n                      <div className={classes.formGroup}>\n                        <FormControl component='fieldset'>\n                          <FormLabel component='legend'>Who is Batting?</FormLabel>\n                          <RadioGroup\n                            name='batting'\n                            value={values.batting.toString()}\n                            onChange={(event) => {\n                              setFieldValue('batting', event.currentTarget.value)\n                            }}\n                          >\n                            <FormControlLabel value={values.team1} control={<Radio />} label={values.team1} />\n                            <FormControlLabel value={values.team2} control={<Radio />} label={values.team2} />\n                          </RadioGroup>\n                        </FormControl>\n                      </div>\n                    </div>\n                  )}\n                  <div>\n                    <Button variant='contained' disabled={activeStep === 0} onClick={handleBack} className={classes.backButton}>\n                      Back\n                    </Button>\n                    <Button id='submit' disabled={isSubmitting} variant='contained' color='primary' type='submit'>\n                      {isLastStep() ? 'Start Game' : 'Next'}\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            )\n          }}\n        </Formik>\n      </div>\n    </div>\n  )\n}\n\nexport default HorizontalStepper\n","import { AppBar, Box, Container, Toolbar, Typography } from '@material-ui/core'\nimport React from 'react'\nimport HorizontalStepper from './HorizontalStepper'\n\nconst StepperContainer = () => {\n  return (\n    <div>\n      <AppBar position='fixed'>\n        <Toolbar>\n          <Typography variant='h5'>Registration Form</Typography>\n        </Toolbar>\n      </AppBar>\n      <Container>\n        <Box marginTop={10}>\n          <HorizontalStepper />\n        </Box>\n      </Container>\n    </div>\n  )\n}\n\nexport default StepperContainer\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport NotFound from '../components/NotFound'\nimport ScoreBoard from '../components/ScoreBoard'\nimport StepperContainer from '../components/StepperContainer'\n\nconst Main = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path='/' component={StepperContainer} />\n        <Route exact path='/score' component={ScoreBoard} />\n        <Route path='*' component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Main\n","import React, { Fragment } from 'react'\nimport Main from './Main'\n\nconst Container = () => {\n  return (\n    <Fragment>\n      <Main />\n    </Fragment>\n  )\n}\n\nexport default Container\n","import { ThemeProvider } from '@material-ui/core'\nimport React from 'react'\nimport { theme } from './components/ui/Theme'\nimport Container from './main/Container'\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}